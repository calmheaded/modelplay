"use strict";(self["webpackChunkthree_model_viewer"]=self["webpackChunkthree_model_viewer"]||[]).push([[812],{2812:function(e,t,n){n.r(t),n.d(t,{USDZLoader:function(){return o}});var r=n(216),i=n(6925);class s{parse(e){const t={},n=e.split("\n"),r=n.length;let i=0,s=null,o=t;const a=[t];function f(){const e=n[i];if(e.includes("=")){const t=e.split("="),n=t[0].trim(),r=t[1].trim();if(r.endsWith("{")){const e={};a.push(e),o[n]=e,o=e}else o[n]=r}else if(e.endsWith("{")){const e=o[s]||{};a.push(e),o[s]=e,o=e}else if(e.endsWith("}")){if(a.pop(),0===a.length)return;o=a[a.length-1]}else if(e.endsWith("(")){const t={};a.push(t),s=e.split("(")[0].trim()||s,o[s]=t,o=t}else e.endsWith(")")?(a.pop(),o=a[a.length-1]):s=e.trim();i++,i<r&&f()}return f(),t}}class o extends r.aNw{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new r.hH6(s.manager);o.setPath(s.path),o.setResponseType("arraybuffer"),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,(function(n){try{t(s.parse(n))}catch(r){i?i(r):console.error(r),s.manager.itemError(e)}}),n,i)}parse(e){const t=new s;function n(e){const n={},s=new r.hH6;s.setResponseType("arraybuffer");for(const r in e){if(r.endsWith("png")){const t=new Blob([e[r]],{type:{type:"image/png"}});n[r]=URL.createObjectURL(t)}if(r.endsWith("usd")){const s=i.T8(e[r]);n[r]=t.parse(s)}}return n}function o(e){for(const t in e)if(t.endsWith("usda"))return e[t]}const a=i.GZ(new Uint8Array(e)),f=n(a),c=o(a);if(void 0===c)return console.warn("THREE.USDZLoader: No usda file found."),new r.ZAu;const p=i.T8(c),l=t.parse(p);function u(e){if(e){if("prepend references"in e){const t=e["prepend references"],n=t.split("@"),r=n[1].replace(/^.\//,""),i=n[2].replace(/^<\//,"").replace(/>$/,"");return d(f[r],i)}return d(e)}}function d(e,t){if(void 0!==t){const t='def "%{id}"';if(t in e)return e[t]}for(const n in e){const t=e[n];if(n.startsWith("def Mesh"))return"point3f[] points"in e&&(t["point3f[] points"]=e["point3f[] points"]),"float2[] primvars:st"in e&&(t["float2[] primvars:st"]=e["float2[] primvars:st"]),"int[] primvars:st:indices"in e&&(t["int[] primvars:st:indices"]=e["int[] primvars:st:indices"]),t;if("object"===typeof t){const e=d(t);if(e)return e}}}function m(e){if(!e)return;let t=new r.u9r;if("int[] faceVertexIndices"in e){const n=JSON.parse(e["int[] faceVertexIndices"]);t.setIndex(new r.TlE(new Uint16Array(n),1))}if("point3f[] points"in e){const n=JSON.parse(e["point3f[] points"].replace(/[()]*/g,"")),i=new r.TlE(new Float32Array(n),3);t.setAttribute("position",i)}if("normal3f[] normals"in e){const n=JSON.parse(e["normal3f[] normals"].replace(/[()]*/g,"")),i=new r.TlE(new Float32Array(n),3);t.setAttribute("normal",i)}else t.computeVertexNormals();if("float2[] primvars:st"in e&&(e["texCoord2f[] primvars:st"]=e["float2[] primvars:st"]),"texCoord2f[] primvars:st"in e){const n=JSON.parse(e["texCoord2f[] primvars:st"].replace(/[()]*/g,"")),i=new r.TlE(new Float32Array(n),2);if("int[] primvars:st:indices"in e){t=t.toNonIndexed();const n=JSON.parse(e["int[] primvars:st:indices"]);t.setAttribute("uv",h(i,n))}else t.setAttribute("uv",i)}return t}function h(e,t){const n=e.array,i=e.itemSize,s=new n.constructor(t.length*i);let o=0,a=0;for(let r=0,f=t.length;r<f;r++){o=t[r]*i;for(let e=0;e<i;e++)s[a++]=n[o++]}return new r.TlE(s,i)}function w(e){if(e){if("rel material:binding"in e){const t=e["rel material:binding"],n=t.replace(/^<\//,"").replace(/>$/,""),r=n.split("/");return g(l,` "${r[1]}"`)}return g(e)}}function g(e,t=""){for(const n in e){const r=e[n];if(n.startsWith("def Material"+t))return r;if("object"===typeof r){const e=g(r,t);if(e)return e}}}function v(e){const t=new r.Wid;if(void 0!==e){if('def Shader "PreviewSurface"'in e){const n=e['def Shader "PreviewSurface"'];if("color3f inputs:diffuseColor.connect"in n){const e=n["color3f inputs:diffuseColor.connect"],i=S(l,/(\w+).output/.exec(e)[1]);t.map=x(i),t.map.encoding=r.knz}else if("color3f inputs:diffuseColor"in n){const e=n["color3f inputs:diffuseColor"].replace(/[()]*/g,"");t.color.fromArray(JSON.parse("["+e+"]"))}if("normal3f inputs:normal.connect"in n){const e=n["normal3f inputs:normal.connect"],r=S(l,/(\w+).output/.exec(e)[1]);t.normalMap=x(r)}"float inputs:roughness"in n&&(t.roughness=parseFloat(n["float inputs:roughness"])),"float inputs:metallic"in n&&(t.metalness=parseFloat(n["float inputs:metallic"]))}if('def Shader "diffuseColor_texture"'in e){const n=e['def Shader "diffuseColor_texture"'];t.map=x(n),t.map.encoding=r.knz}if('def Shader "normal_texture"'in e){const n=e['def Shader "normal_texture"'];t.normalMap=x(n)}}return t}function S(e,t){for(const n in e){const r=e[n];if(n.startsWith(`def Shader "${t}"`))return r;if("object"===typeof r){const e=S(r,t);if(e)return e}}}function x(e){if("asset inputs:file"in e){const t=e["asset inputs:file"].replace(/@*/g,""),n=new r.dpR,i=n.load(f[t]),s={'"clamp"':r.uWy,'"mirror"':r.OoA,'"repeat"':r.rpg};return"token inputs:wrapS"in e&&(i.wrapS=s[e["token inputs:wrapS"]]),"token inputs:wrapT"in e&&(i.wrapT=s[e["token inputs:wrapT"]]),i}return null}function y(e){const t=m(u(e)),n=v(w(e)),i=t?new r.Kj0(t,n):new r.Tme;if("matrix4d xformOp:transform"in e){const t=JSON.parse("["+e["matrix4d xformOp:transform"].replace(/[()]*/g,"")+"]");i.matrix.fromArray(t),i.matrix.decompose(i.position,i.quaternion,i.scale)}return i}function W(e,t){for(const n in e)if(n.startsWith("def Scope"))W(e[n],t);else if(n.startsWith("def Xform")){const r=y(e[n]);/def Xform "(\w+)"/.test(n)&&(r.name=/def Xform "(\w+)"/.exec(n)[1]),t.add(r),W(e[n],r)}}const b=new r.ZAu;return W(l,b),b}}}}]);